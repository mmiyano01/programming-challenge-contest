class ShotestPathOfMaze
  def initialize
    @n = 10
    @m = 10
    @maze = [
      ['#','S','#','#','#','#','#','#','.','#'],
      ['.','.','.','.','.','.','#','.','.','#'],
      ['.','#','.','#','#','.','#','#','.','#'],
      ['.','#','.','.','.','.','.','.','.','.'],
      ['#','#','.','#','#','.','#','#','#','#'],
      ['.','.','.','.','#','.','.','.','.','#'],
      ['#','#','#','#','#','#','#','#','.','#'],
      ['.','.','.','#','.','.','.','.','.','.'],
      ['.','#','#','#','#','.','#','#','#','.'],
      ['.','.','.','.','#','.','.','.','G','#']
    ]
    @start_n = 1
    @start_m = 2
    @goal_n = 10
    @goal_m = 9

  end

  def walk_through
    path_q = []
    ans = []
    possible_move(@start_n - 1, @start_m - 1)
  end

  def possible_move(n, m)
    if n - 1 >= 0
      possible_move(n-1, m)
    if n < @n
      possible_move(n+1, m)
    if m - 1 >= 0
      possible_move(n, m - 1)
    if m < @m
      possible_move(n, m + 1)
    end
  end

end
